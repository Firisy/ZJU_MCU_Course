ORG 0030H
SJMP MAIN
ORG 0080H

MAIN:
MOV DPTR,#TABLE
LCALL KEY
MOVC A,@A+DPTR  ;将A指向的数据加上DPTR的值，将结果赋给A
MOV P0,A    ;将A的值赋给P0口,P0口的值就是A指向的数据
CLR P2.1    ;将P2.1口清零
LJMP MAIN

KEY:
LCALL KS
JNZ K1  ;如果有按键按下，跳转到K1
LCALL DELAY2
AJMP KEY

K1:
LCALL DELAY2
LCALL DELAY2
LCALL KS    ;再次检测是否有按键按下
JNZ K2      ;如果有按键按下，跳转到K2
AJMP KEY

K2:
MOV P1,#0FH

L0:
JB P1.0, L1
MOV A,#00H
SETB ACC.0
AJMP H4

L1:
JB P1.1,L2
MOV A,#00H
SETB ACC.1
AJMP H4

L2:
JB P1.2,L3
MOV A,#00H
SETB ACC.2
AJMP H4

L3:
MOV A,#00H
SETB ACC.3

H4:
SETB P1.4
PUSH ACC
ANL A,P1
JZ H5
POP ACC
SETB ACC.4
LJMP LK


H5:
POP ACC
SETB P1.5
PUSH ACC
ANL A,P1
JZ H6
POP ACC
SETB ACC.5
LJMP LK

H6:
POP ACC
SETB P1.6
PUSH ACC
ANL A,P1
JZ H7
POP ACC
SETB ACC.6
LJMP LK

H7:
POP ACC
SETB ACC.7

LK:
MOV R4,#0H
PUSH ACC
LOOP:
    RRC A
    JC NEXT1
    INC R4
    CJNE R4,#04H,LOOP
NEXT1:
PUSH ACC
MOV A,R4
MOV B,#04H
MUL AB
MOV R5,A
POP ACC

POP ACC
SWAP A
MOV R4,#0H
LOOP2:
    RRC A
    JC NEXT2
    INC R4
    CJNE R4,#04H,LOOP2

NEXT2:
MOV A,R5
ADD A,R4
PUSH ACC


K4:
LCALL DELAY2    ;延时
LCALL KS    ;再次判断是否再次按下
JNZ K4      ;如果有，就再次重新判断
POP ACC
RET

KS:
MOV P1,#0FH ;将P1口的低四位设置为高电平
MOV A,P1    ;将P1口的值赋给A,如果在这个瞬间有按键按下，A的值会改变
XRL A,#0FH  ;将A与0FH异或，如果有按键按下，A的值不再是#01FH,最后结果A不为0
RET


DELAY2:
MOV R5,#08H
L7:
MOV R6,#0FAH
L8:
DJNZ R6,L8
DJNZ R5,L7
RET

TABLE:
DB 7EH,0A2H,62H,74H
DB 61H,21H,7AH,20H
DB 60H,28H,30H,25H,
DB 0A9H,26H,0A1H,0B1H

END







